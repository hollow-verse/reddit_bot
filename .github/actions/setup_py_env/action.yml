name: Dependency Management
description: Checks cached dependencies and installs dependencies through poetry if needed
inputs:
  system-requirements:
    description: 'System requirements to install before installing python dependencies'
    required: false
    default: ''
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11.8'
runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Provide OS-level requirements
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y ${{ inputs.system-requirements }}
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'poetry'
    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv
          ~/.cache/pypoetry
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          venv-${{ runner.os }}-
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      shell: bash
      run: poetry install --no-interaction --no-root
